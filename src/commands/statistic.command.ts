import {Command} from './command.class'
import {Context, Telegraf} from 'telegraf'
import {ApiService} from '../api/api.service'
import {showErrorMessage} from '../utils/bot.utils'

export class StatisticCommand extends Command {
    private readonly apiService: ApiService

    constructor(bot: Telegraf<Context>, apiService: ApiService) {
        super(bot)
        this.apiService = apiService
    }

    handle(): void {
        this.bot.hears('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', async (ctx) => {
            try {
                const statistic = await this.apiService.getStatistic()

                if (statistic) {
                    await ctx.reply(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è: ${statistic.perAllTime}\n–ó–∞ –Ω–µ–¥–µ–ª—é: +${statistic.perWeek}\n–ó–∞ –º–µ—Å—è—Ü: +${statistic.perMonth}\n–ó–∞ –¥–µ–Ω—å: +${statistic.perDay}`)
                } else {
                    await ctx.reply('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                }
            } catch (error) {
                await showErrorMessage(ctx, error)
            }
        })
    }
}